{"version":3,"sources":["components/errorMessage/ErrorMessage.js","hooks/http.hook.js","services/MarvelService.js","components/errorBoundary/ErrorBoundary.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/charSearchForm/CharSearchForm.js","components/pages/MainPage.js"],"names":["ErrorMessage","err","className","useHtttp","useState","error","setError","loading","setLoading","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","clearError","useMarvelService","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getCharacterByName","name","length","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","getAllComics","_transformComics","getComic","comic","title","pageCount","language","textObjects","price","prices","ErrorBoundary","state","errInfo","console","log","this","setState","props","children","Component","View","imgStyle","indexOf","objectFit","src","alt","style","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","window","addEventListener","showNewCharactersByScrollEnd","removeEventListener","pageYOffset","document","documentElement","clientHeight","scrollHeight","initial","onCharListLoaded","newCharList","ended","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","width","disabled","display","Skeleton","CharInfo","charId","scrollTo","top","behavior","skeleton","errorStyle","padding","height","CharSearchForm","to","initialValues","charName","validationSchema","Yup","required","onSubmit","htmlFor","type","placeholder","component","MainPage","selectedChar","setSelectedChar","decoration"],"mappings":"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","file":"static/js/6.e973128f.chunk.js","sourcesContent":["import \"./errorMessage.scss\"\r\n\r\nconst ErrorMessage = ({err = 'Something went wrong but Groot soon will be repair all.'}) => {\r\n  return (\r\n    <div className=\"errorMessage\">\r\n        <h3>{err}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nconst useHtttp = () => {\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(true);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return {loading, request, error, clearError};\r\n};\r\n\r\nexport default useHtttp;\r\n","import useHttp from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=e1cacf97d0c71a777e3cb47285f8bcfb\";\r\n  const _baseOffset = 210;\r\n\r\n  //characters\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\r\n    return res.data.results.length > 0 ? [_transformCharacter(res.data.results[0])] : [];\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description:\r\n        char.description === \"\"\r\n          ? \"Unfortunately, information about this character was destroyed by Thanos...\"\r\n          : char.description.length > 220\r\n          ? char.description.slice(0, 220) + \"...\"\r\n          : char.description,\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  //Comics\r\n  const getAllComics = async (offset = 1) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?issueNumber=1&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformComics = (comic) => {\r\n    return {\r\n      id: comic.id,\r\n      name: comic.title,\r\n      description: comic.description || \"There is no description.\",\r\n      pageCount: comic.pageCount\r\n        ? `${comic.pageCount} pages`\r\n        : \"No information about the number of pages.\",\r\n      language: comic.textObjects.language || \"en-us\",\r\n      price: comic.prices[0].price\r\n        ? `$${comic.prices[0].price}`\r\n        : \"Not available\",\r\n      thumbnail: comic.thumbnail.path + \".\" + comic.thumbnail.extension,\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getCharacterByName,\r\n    clearError,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { Component } from \"react\";\r\n\r\nimport ErrorMassage from \"../errorMessage/ErrorMessage\"\r\n\r\nimport \"./errorBoundary.scss\"\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errInfo){\r\n        console.log(error, errInfo);\r\n        this.setState({error: true});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error){\r\n            return (<div className=\"error\"><ErrorMassage/></div>)\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from \"react\";\r\n\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nimport \"./randomChar.scss\";\r\nimport mjolnir from \"../../resources/img/mjolnir.png\";\r\n\r\nconst RandomChar = () => {\r\n  const { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n  const [char, setChar] = useState({});\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n    \r\n    // const timerId = setInterval(updateChar, 5000);\r\n    // return () => clearInterval(timerId);\r\n  }, []);\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const updateChar = () => {\r\n    clearError();\r\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n    getCharacter(id).then(onCharLoaded);\r\n  };\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error) ? <View char={char} /> : null;\r\n\r\n  return (\r\n    <div className=\"randomchar\">\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n      <div className=\"randomchar__static\">\r\n        <p className=\"randomchar__title\">\r\n          Random character for today!\r\n          <br />\r\n          Do you want to get to know him better?\r\n        </p>\r\n        <p className=\"randomchar__title\">Or choose another one</p>\r\n        <button onClick={updateChar} className=\"button button__main\">\r\n          <div className=\"inner\">try it</div>\r\n        </button>\r\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ char }) => {\r\n  const { name, description, thumbnail, homepage, wiki } = char;\r\n  let imgStyle = {};\r\n\r\n  if (thumbnail) {\r\n    imgStyle =\r\n      thumbnail.indexOf(\"not_available\") > -1\r\n        ? { objectFit: \"contain\" }\r\n        : { objectFit: \"cover\" };\r\n  }\r\n\r\n  return (\r\n    <div className=\"randomchar__block\">\r\n      <img\r\n        src={thumbnail}\r\n        alt=\"Random character\"\r\n        className={`randomchar__img`}\r\n        style={imgStyle}\r\n      />\r\n      <div className=\"randomchar__info\">\r\n        <p className=\"randomchar__name\">{name}</p>\r\n        <p className=\"randomchar__descr\">{description}</p>\r\n        <div className=\"randomchar__btns\">\r\n          <a href={homepage} className=\"button button__main\">\r\n            <div className=\"inner\">homepage</div>\r\n          </a>\r\n          <a href={wiki} className=\"button button__secondary\">\r\n            <div className=\"inner\">Wiki</div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomChar;\r\n","import { useState, useEffect, useRef} from \"react\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Spinner from \"../spinner/Spinner\";\r\n\r\nimport \"./charList.scss\";\r\n\r\nconst CharList = (props) => {\r\n  const [charList, setCharList] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(220);\r\n  const [charEnded, setCharEnded] = useState(false);\r\n\r\n  const { loading, error, getAllCharacters } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (charList.length > 1) {\r\n      window.addEventListener(\"scroll\", showNewCharactersByScrollEnd);\r\n    }\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", showNewCharactersByScrollEnd);\r\n    };\r\n  }, [offset]);\r\n\r\n  const showNewCharactersByScrollEnd = () => {\r\n    if (\r\n      window.pageYOffset + document.documentElement.clientHeight >=\r\n        document.documentElement.scrollHeight &&\r\n      !loading &&\r\n      !error &&\r\n      !newItemLoading\r\n    ) {\r\n      onRequest(offset);\r\n    }\r\n  };\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n\r\n    getAllCharacters(offset).then(onCharListLoaded);\r\n  };\r\n\r\n  const onCharListLoaded = (newCharList) => {\r\n    let ended = false;\r\n    if (newCharList.length < 9) {\r\n      ended = true;\r\n    }\r\n\r\n    setCharList(charList => [...charList, ...newCharList]);\r\n    setNewItemLoading(newItemLoading => false);\r\n    setOffset(offset => offset + 9);\r\n    setCharEnded(charEnded => ended);\r\n  };\r\n\r\n  const itemRefs = useRef([]);\r\n\r\n  const focusOnItem = (id) => {\r\n    itemRefs.current.forEach((item) =>\r\n      item.classList.remove(\"char__item_selected\")\r\n    );\r\n    itemRefs.current[id].classList.add(\"char__item_selected\");\r\n    itemRefs.current[id].focus();\r\n  };\r\n\r\n  function renderItems(arr) {\r\n    const items = arr.map((item, i) => {\r\n      let imgStyle =\r\n        item.thumbnail.indexOf(\"not_available\") > -1 ||\r\n        item.thumbnail.indexOf(\"4c002e0305708.gif\") > -1\r\n          ? { objectFit: \"unset\" }\r\n          : { objectFit: \"cover\" };\r\n\r\n      return (\r\n        <li\r\n          className=\"char__item\"\r\n          tabIndex={0}\r\n          key={item.id}\r\n          ref={(el) => (itemRefs.current[i] = el)}\r\n          onClick={() => {\r\n            props.onCharSelected(item.id);\r\n            focusOnItem(i);\r\n          }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"\" || e.key === \"Enter\") {\r\n              props.onCharSelected(item.id);\r\n              focusOnItem(i);\r\n            }\r\n          }}\r\n        >\r\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\r\n          <div className=\"char__name\">{item.name}</div>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return <ul className=\"char__grid\">{items}</ul>;\r\n  }\r\n\r\n  const items = renderItems(charList);\r\n\r\n  const errorMessage = error ? (\r\n    <li className=\"char__item\" style={{ width: 100 + \"%\" }}>\r\n      {<ErrorMessage />}\r\n    </li>\r\n  ) : null;\r\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\r\n\r\n  return (\r\n    <div className=\"char__list\">\r\n      <ul className=\"char__grid\">\r\n        {errorMessage}\r\n        {spinner}\r\n        {items}\r\n      </ul>\r\n      <button\r\n        className=\"button button__main button__long\"\r\n        disabled={newItemLoading}\r\n        style={{ display: charEnded ? \"none\" : \"block\" }}\r\n        onClick={() => onRequest(offset)}\r\n      >\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharList;\r\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Skeleton from \"../skeleton/Skeleton\";\r\n\r\nimport \"./charInfo.scss\";\r\n\r\nconst CharInfo = (props) => {\r\n  const {loading, error, getCharacter, clearError} = useMarvelService();\r\n\r\n  const [char, setChar] = useState(null);\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n    // eslint-disable-next-line\r\n  }, [props.charId]);\r\n\r\n  const updateChar = () => {\r\n    const { charId } = props;\r\n    if (!charId) {\r\n      return;\r\n    }\r\n\r\n    clearError();\r\n    getCharacter(charId).then(onCharLoaded);\r\n  };\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n    window.scrollTo({ top: 400, behavior: \"smooth\" });\r\n  };\r\n\r\n\r\n  const skeleton = char || loading || error ? null : <Skeleton />;\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\r\n  const errorStyle = error ? { padding: 5 + \"px\", height: 200 + \"px\" } : null;\r\n\r\n  return (\r\n    <div className=\"char__info\" style={errorStyle}>\r\n      {skeleton}\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ char }) => {\r\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\r\n\r\n  const imgStyle =\r\n    thumbnail.indexOf(\"not_available\") > -1\r\n      ? { objectFit: \"contain\" }\r\n      : { objectFit: \"cover\" };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"char__basics\">\r\n        <img src={thumbnail} alt={name} style={imgStyle} />\r\n        <div>\r\n          <div className=\"char__info-name\">{name}</div>\r\n          <div className=\"char__btns\">\r\n            <a href={homepage} className=\"button button__main\">\r\n              <div className=\"inner\">homepage</div>\r\n            </a>\r\n            <a href={wiki} className=\"button button__secondary\">\r\n              <div className=\"inner\">Wiki</div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"char__descr\">{description}</div>\r\n      <div className=\"char__comics\">Comics:</div>\r\n      <ul className=\"char__comics-list\">\r\n        {comics.length > 0 ? null : \"There is not comics with this character\"}\r\n        {comics.map((item, i) => {\r\n          // eslint-disable-next-line\r\n          if (i > 9) return;\r\n          return (\r\n            <li key={i} className=\"char__comics-item\">\r\n              {item.name}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nCharInfo.propTypes = {\r\n  charId: PropTypes.number,\r\n};\r\n\r\nexport default CharInfo;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\nimport {\r\n  Formik,\r\n  Form,\r\n  Field,\r\n  ErrorMessage as FormikErrorMessage,\r\n} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nimport \"./charSearchForm.scss\";\r\n\r\nconst CharSearchForm = () => {\r\n  const [char, setChar] = useState('');\r\n  const { loading, error, getCharacterByName, clearError } = useMarvelService();\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const updateChar = (name) => {\r\n    clearError();\r\n    getCharacterByName(name).then(onCharLoaded);\r\n  };\r\n\r\n  const errorMessage = error ? (\r\n    <div className=\".char__search-critical-error\">{ErrorMessage}</div>\r\n  ) : null;\r\n  const results = !char ? null : char.length > 0 ? (\r\n    <div className=\"char__search-wrapper\">\r\n      <div className=\"char__search-success\">\r\n        There is! Visit {char[0].name} page?\r\n      </div>\r\n      <Link\r\n        to={`/marvel-db/characters/${char[0].id}`}\r\n        className=\"button button__secondary\"\r\n      >\r\n        <div className=\"inner\">To page</div>\r\n      </Link>\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      <div className=\"char__search-error\">\r\n        The character was not found. Check the name and try again.\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"char__search-form\">\r\n      <Formik\r\n        initialValues={{\r\n          charName: \"\",\r\n        }}\r\n        validationSchema={Yup.object({\r\n          charName: Yup.string().required(\"This field is required\"),\r\n        })}\r\n        onSubmit={({ charName }) => {\r\n          updateChar(charName);\r\n        }}\r\n      >\r\n        <Form>\r\n          <label className=\"char__search-label\" htmlFor=\"charName\">\r\n            Or find a character by name:\r\n          </label>\r\n          <div className=\"char__search-wrapper\">\r\n            <Field\r\n              id=\"charName\"\r\n              name=\"charName\"\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"button button__main\"\r\n              disabled={loading}\r\n            >\r\n              <div className=\"inner\">find</div>\r\n            </button>\r\n          </div>\r\n          <FormikErrorMessage\r\n            component=\"div\"\r\n            className=\"char__search-error\"\r\n            name=\"charName\"\r\n          />\r\n        </Form>\r\n      </Formik>\r\n      {results}\r\n      {errorMessage}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharSearchForm;\r\n","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport decoration from \"../../resources/img/vision.png\";\r\nimport CharSearchForm from \"../charSearchForm/CharSearchForm\";\r\n\r\nconst MainPage = () => {\r\n  const [selectedChar, setSelectedChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setSelectedChar(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected} />\r\n        </ErrorBoundary>\r\n\r\n        <div>\r\n          <ErrorBoundary>\r\n            <CharInfo charId={selectedChar} />\r\n            <CharSearchForm />\r\n          </ErrorBoundary>\r\n        </div>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"sourceRoot":""}