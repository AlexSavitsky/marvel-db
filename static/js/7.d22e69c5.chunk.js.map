{"version":3,"sources":["components/errorMessage/ErrorMessage.js","hooks/http.hook.js","services/MarvelService.js","components/errorBoundary/ErrorBoundary.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","err","className","useHtttp","useState","error","setError","loading","setLoading","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","clearError","useMarvelService","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getCharacterByName","name","length","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","getAllComics","_transformComics","getComic","comic","title","pageCount","language","textObjects","price","prices","ErrorBoundary","state","errInfo","console","log","this","setState","props","children","Component","AppBanner","src","avengers","alt","avengersLogo","ComicsList","comicsList","setComicsList","newItemLoading","setNewItemLoading","comicsEnded","setComicsEnded","setOffset","useEffect","onRequest","window","addEventListener","showNewComicsByScrollEnd","removeEventListener","pageYOffset","document","documentElement","clientHeight","scrollHeight","initial","then","onComicsListLoaded","newComicsList","ended","arr","item","i","to","renderItems","errorMessage","style","width","spinner","Spinner","disabled","display","onClick","ComicsPage"],"mappings":"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","file":"static/js/7.d22e69c5.chunk.js","sourcesContent":["import \"./errorMessage.scss\"\r\n\r\nconst ErrorMessage = ({err = 'Something went wrong but Groot soon will be repair all.'}) => {\r\n  return (\r\n    <div className=\"errorMessage\">\r\n        <h3>{err}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nconst useHtttp = () => {\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(true);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return {loading, request, error, clearError};\r\n};\r\n\r\nexport default useHtttp;\r\n","import useHttp from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const { loading, request, error, clearError } = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=e1cacf97d0c71a777e3cb47285f8bcfb\";\r\n  const _baseOffset = 210;\r\n\r\n  //characters\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\r\n    return res.data.results.length > 0 ? [_transformCharacter(res.data.results[0])] : [];\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description:\r\n        char.description === \"\"\r\n          ? \"Unfortunately, information about this character was destroyed by Thanos...\"\r\n          : char.description.length > 220\r\n          ? char.description.slice(0, 220) + \"...\"\r\n          : char.description,\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  //Comics\r\n  const getAllComics = async (offset = 1) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?issueNumber=1&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformComics = (comic) => {\r\n    return {\r\n      id: comic.id,\r\n      name: comic.title,\r\n      description: comic.description || \"There is no description.\",\r\n      pageCount: comic.pageCount\r\n        ? `${comic.pageCount} pages`\r\n        : \"No information about the number of pages.\",\r\n      language: comic.textObjects.language || \"en-us\",\r\n      price: comic.prices[0].price\r\n        ? `$${comic.prices[0].price}`\r\n        : \"Not available\",\r\n      thumbnail: comic.thumbnail.path + \".\" + comic.thumbnail.extension,\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getCharacterByName,\r\n    clearError,\r\n    getAllComics,\r\n    getComic,\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { Component } from \"react\";\r\n\r\nimport ErrorMassage from \"../errorMessage/ErrorMessage\"\r\n\r\nimport \"./errorBoundary.scss\"\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errInfo){\r\n        console.log(error, errInfo);\r\n        this.setState({error: true});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error){\r\n            return (<div className=\"error\"><ErrorMassage/></div>)\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect} from \"react\";\nimport {Link} from 'react-router-dom';\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nimport \"./comicsList.scss\";\n\nconst ComicsList = () => {\n  const { loading, error, getAllComics } = useMarvelService();\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [comicsEnded, setComicsEnded] = useState(false);\n  const [offset, setOffset] = useState(200);\n\n  useEffect(() => {\n    onRequest(offset, true);\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", showNewComicsByScrollEnd);\n\n    return () => {\n      window.removeEventListener(\"scroll\", showNewComicsByScrollEnd);\n    };\n  });\n\n  const showNewComicsByScrollEnd = () => {\n    if (\n      window.pageYOffset + document.documentElement.clientHeight >=\n        document.documentElement.scrollHeight &&\n      !loading &&\n      !error &&\n      !newItemLoading\n    ) {\n      onRequest(offset);\n    }\n  };\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n\n    setComicsList((comicsList) => [...comicsList, ...newComicsList]);\n    setNewItemLoading(false);\n    setOffset((offset) => offset + 8);\n    setComicsEnded(ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`/marvel-db/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt={item.name}\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{item.name}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n\n    return <ul className=\"comics__grid\">{items}</ul>;\n  }\n\n  const items = renderItems(comicsList);\n\n  const errorMessage = error ? (\n    <li className=\"comics__item\" style={{ width: 100 + \"%\" }}>\n      {<ErrorMessage />}\n    </li>\n  ) : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"comics__list\">\n      <ul className=\"comics__grid\">\n        {spinner}\n        {errorMessage}\n        {items}\n      </ul>\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <ErrorBoundary>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"sourceRoot":""}