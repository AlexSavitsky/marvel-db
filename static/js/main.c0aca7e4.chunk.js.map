{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/ErrorMessage.js","hooks/http.hook.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","components/pages/404.js","components/pages/SingleComicPage.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","end","style","color","isActive","Spinner","ErrorMessage","err","useHtttp","useState","error","setError","loading","setLoading","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","clearError","useMarvelService","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","char","checkedDescr","description","length","slice","name","thumbnail","path","extension","homepage","urls","wiki","comics","items","getAllComics","_transformComics","getComic","comic","title","pageCount","language","textObjects","price","prices","View","imgStyle","indexOf","objectFit","src","alt","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","window","addEventListener","showNewCharactersByScrollEnd","removeEventListener","pageYOffset","document","documentElement","clientHeight","scrollHeight","initial","onCharListLoaded","newCharList","ended","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","width","disabled","display","Skeleton","CharInfo","charId","scrollTo","top","behavior","skeleton","errorStyle","padding","height","ErrorBoundary","state","errInfo","console","log","this","setState","children","Component","MainPage","selectedChar","setSelectedChar","decoration","ComicsList","comicsList","setComicsList","comicsEnded","setComicsEnded","showNewComicsByScrollEnd","onComicsListLoaded","newComicsList","AppBanner","avengers","avengersLogo","ComicsPage","Page404","margin","fontWeight","fontSize","marginTop","SingleComicPage","comicId","useParams","setComic","updateComic","onComicLoaded","App","element","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.c0aca7e4.chunk.js","sourcesContent":["import { Link, NavLink } from \"react-router-dom\";\n\nimport \"./appHeader.scss\";\n\nconst AppHeader = () => {\n  return (\n    <header className=\"app__header\">\n      <h1 className=\"app__title\">\n        <Link to=\"/marvel-db\">\n          <span>Marvel</span> information portal\n        </Link>\n      </h1>\n      <nav className=\"app__menu\">\n        <ul>\n          <li>\n            <NavLink\n              end\n              style={({ isActive }) => ({\n                color: isActive ? \"#9F0013\" : \"inherit\",\n              })}\n              to=\"marvel-db\"\n            >\n              Characters\n            </NavLink>\n          </li>\n          /\n          <li>\n            <NavLink\n              style={({ isActive }) => ({\n                color: isActive ? \"#9F0013\" : \"inherit\",\n              })}\n              to=\"/marvel-db/comics\"\n            >\n              Comics\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","import \"./spinner.scss\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"loadingio-spinner-double-ring-epfq6pyjnve\">\r\n      <div className=\"ldio-401gce7yfk3\">\r\n        <div></div>\r\n        <div></div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import \"./errorMessage.scss\"\r\n\r\nconst ErrorMessage = ({err = 'Something went wrong but Groot soon will be repair all.'}) => {\r\n  return (\r\n    <div className=\"errorMessage\">\r\n        <h3>{err}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nconst useHtttp = () => {\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(true);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return {loading, request, error, clearError};\r\n};\r\n\r\nexport default useHtttp;\r\n","import useHttp from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n  const {loading, request, error, clearError} = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=e1cacf97d0c71a777e3cb47285f8bcfb\";\r\n  const _baseOffset = 210;\r\n\r\n  \r\n  //characters\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(\r\n      `${_apiBase}characters/${id}?${_apiKey}`\r\n    );\r\n\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    let checkedDescr = char.description;\r\n    if(checkedDescr === ''){\r\n      checkedDescr = \"Unfortunately, information about this character was destroyed by Thanos...\" \r\n    }\r\n    if (checkedDescr.length > 220){\r\n      checkedDescr = checkedDescr.slice(0, 220) + '...';\r\n    }\r\n\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: checkedDescr,\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items\r\n    };\r\n  };\r\n\r\n\r\n  //Comics\r\n  const getAllComics = async (offset = 1) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?issueNumber=1&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n\r\n    return res.data.results.map(_transformComics);\r\n  }\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(\r\n      `${_apiBase}comics/${id}?${_apiKey}`\r\n    );\r\n\r\n    return _transformComics(res.data.results[0]);\r\n  }\r\n\r\n  const _transformComics = (comic) => {\r\n      return {\r\n        id: comic.id,\r\n        name: comic.title,\r\n        description: comic.description || 'There is no description.',\r\n        pageCount: comic.pageCount ? `${comic.pageCount} pages` : 'No information about the number of pages.',\r\n        language: comic.textObjects.language || 'en-us',\r\n        price: comic.prices[0].price ? `$${comic.prices[0].price}` : 'Not available',\r\n        thumbnail: comic.thumbnail.path + \".\" + comic.thumbnail.extension\r\n      }\r\n  }\r\n\r\n  return {loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic}\r\n}\r\n\r\nexport default useMarvelService;\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from \"react\";\r\n\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport useMarvelService from \"../../services/MarvelService\";\r\n\r\nimport \"./randomChar.scss\";\r\nimport mjolnir from \"../../resources/img/mjolnir.png\";\r\n\r\nconst RandomChar = () => {\r\n  const { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n  const [char, setChar] = useState({});\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n    // const timerId = setInterval(updateChar, 5000);\r\n    // return () => clearInterval(timerId);\r\n  }, []);\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n  };\r\n\r\n  const updateChar = () => {\r\n    clearError();\r\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n    getCharacter(id).then(onCharLoaded);\r\n  };\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error) ? <View char={char} /> : null;\r\n\r\n  return (\r\n    <div className=\"randomchar\">\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n      <div className=\"randomchar__static\">\r\n        <p className=\"randomchar__title\">\r\n          Random character for today!\r\n          <br />\r\n          Do you want to get to know him better?\r\n        </p>\r\n        <p className=\"randomchar__title\">Or choose another one</p>\r\n        <button onClick={updateChar} className=\"button button__main\">\r\n          <div className=\"inner\">try it</div>\r\n        </button>\r\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ char }) => {\r\n  const { name, description, thumbnail, homepage, wiki } = char;\r\n  let imgStyle = {};\r\n\r\n  if (thumbnail) {\r\n    imgStyle =\r\n      thumbnail.indexOf(\"not_available\") > -1\r\n        ? { objectFit: \"contain\" }\r\n        : { objectFit: \"cover\" };\r\n  }\r\n\r\n  return (\r\n    <div className=\"randomchar__block\">\r\n      <img\r\n        src={thumbnail}\r\n        alt=\"Random character\"\r\n        className={`randomchar__img`}\r\n        style={imgStyle}\r\n      />\r\n      <div className=\"randomchar__info\">\r\n        <p className=\"randomchar__name\">{name}</p>\r\n        <p className=\"randomchar__descr\">{description}</p>\r\n        <div className=\"randomchar__btns\">\r\n          <a href={homepage} className=\"button button__main\">\r\n            <div className=\"inner\">homepage</div>\r\n          </a>\r\n          <a href={wiki} className=\"button button__secondary\">\r\n            <div className=\"inner\">Wiki</div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomChar;\r\n","import { useState, useEffect, useRef} from \"react\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Spinner from \"../spinner/Spinner\";\r\n\r\nimport \"./charList.scss\";\r\n\r\nconst CharList = (props) => {\r\n  const [charList, setCharList] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(220);\r\n  const [charEnded, setCharEnded] = useState(false);\r\n\r\n  const { loading, error, getAllCharacters } = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (charList.length > 1) {\r\n      window.addEventListener(\"scroll\", showNewCharactersByScrollEnd);\r\n    }\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", showNewCharactersByScrollEnd);\r\n    };\r\n  }, [offset]);\r\n\r\n  const showNewCharactersByScrollEnd = () => {\r\n    if (\r\n      window.pageYOffset + document.documentElement.clientHeight >=\r\n        document.documentElement.scrollHeight &&\r\n      !loading &&\r\n      !error &&\r\n      !newItemLoading\r\n    ) {\r\n      onRequest(offset);\r\n    }\r\n  };\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n\r\n    getAllCharacters(offset).then(onCharListLoaded);\r\n  };\r\n\r\n  const onCharListLoaded = (newCharList) => {\r\n    let ended = false;\r\n    if (newCharList.length < 9) {\r\n      ended = true;\r\n    }\r\n\r\n    setCharList(charList => [...charList, ...newCharList]);\r\n    setNewItemLoading(newItemLoading => false);\r\n    setOffset(offset => offset + 9);\r\n    setCharEnded(charEnded => ended);\r\n  };\r\n\r\n  const itemRefs = useRef([]);\r\n\r\n  const focusOnItem = (id) => {\r\n    itemRefs.current.forEach((item) =>\r\n      item.classList.remove(\"char__item_selected\")\r\n    );\r\n    itemRefs.current[id].classList.add(\"char__item_selected\");\r\n    itemRefs.current[id].focus();\r\n  };\r\n\r\n  function renderItems(arr) {\r\n    const items = arr.map((item, i) => {\r\n      let imgStyle =\r\n        item.thumbnail.indexOf(\"not_available\") > -1 ||\r\n        item.thumbnail.indexOf(\"4c002e0305708.gif\") > -1\r\n          ? { objectFit: \"unset\" }\r\n          : { objectFit: \"cover\" };\r\n\r\n      return (\r\n        <li\r\n          className=\"char__item\"\r\n          tabIndex={0}\r\n          key={item.id}\r\n          ref={(el) => (itemRefs.current[i] = el)}\r\n          onClick={() => {\r\n            props.onCharSelected(item.id);\r\n            focusOnItem(i);\r\n          }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"\" || e.key === \"Enter\") {\r\n              props.onCharSelected(item.id);\r\n              focusOnItem(i);\r\n            }\r\n          }}\r\n        >\r\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\r\n          <div className=\"char__name\">{item.name}</div>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return <ul className=\"char__grid\">{items}</ul>;\r\n  }\r\n\r\n  const items = renderItems(charList);\r\n\r\n  const errorMessage = error ? (\r\n    <li className=\"char__item\" style={{ width: 100 + \"%\" }}>\r\n      {<ErrorMessage />}\r\n    </li>\r\n  ) : null;\r\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\r\n\r\n  return (\r\n    <div className=\"char__list\">\r\n      <ul className=\"char__grid\">\r\n        {errorMessage}\r\n        {spinner}\r\n        {items}\r\n      </ul>\r\n      <button\r\n        className=\"button button__main button__long\"\r\n        disabled={newItemLoading}\r\n        style={{ display: charEnded ? \"none\" : \"block\" }}\r\n        onClick={() => onRequest(offset)}\r\n      >\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharList;\r\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport Skeleton from \"../skeleton/Skeleton\";\r\n\r\nimport \"./charInfo.scss\";\r\n\r\nconst CharInfo = (props) => {\r\n  const {loading, error, getCharacter, clearError} = useMarvelService();\r\n\r\n  const [char, setChar] = useState(null);\r\n\r\n  useEffect(() => {\r\n    updateChar();\r\n    // eslint-disable-next-line\r\n  }, [props.charId]);\r\n\r\n  const updateChar = () => {\r\n    const { charId } = props;\r\n    if (!charId) {\r\n      return;\r\n    }\r\n\r\n    clearError();\r\n    getCharacter(charId).then(onCharLoaded);\r\n  };\r\n\r\n  const onCharLoaded = (char) => {\r\n    setChar(char);\r\n    window.scrollTo({ top: 400, behavior: \"smooth\" });\r\n  };\r\n\r\n\r\n  const skeleton = char || loading || error ? null : <Skeleton />;\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !char) ? <View char={char} /> : null;\r\n  const errorStyle = error ? { padding: 5 + \"px\", height: 200 + \"px\" } : null;\r\n\r\n  return (\r\n    <div className=\"char__info\" style={errorStyle}>\r\n      {skeleton}\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst View = ({ char }) => {\r\n  const { name, description, thumbnail, homepage, wiki, comics } = char;\r\n\r\n  const imgStyle =\r\n    thumbnail.indexOf(\"not_available\") > -1\r\n      ? { objectFit: \"contain\" }\r\n      : { objectFit: \"cover\" };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"char__basics\">\r\n        <img src={thumbnail} alt={name} style={imgStyle} />\r\n        <div>\r\n          <div className=\"char__info-name\">{name}</div>\r\n          <div className=\"char__btns\">\r\n            <a href={homepage} className=\"button button__main\">\r\n              <div className=\"inner\">homepage</div>\r\n            </a>\r\n            <a href={wiki} className=\"button button__secondary\">\r\n              <div className=\"inner\">Wiki</div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"char__descr\">{description}</div>\r\n      <div className=\"char__comics\">Comics:</div>\r\n      <ul className=\"char__comics-list\">\r\n        {comics.length > 0 ? null : \"There is not comics with this character\"}\r\n        {comics.map((item, i) => {\r\n          // eslint-disable-next-line\r\n          if (i > 9) return;\r\n          return (\r\n            <li key={i} className=\"char__comics-item\">\r\n              {item.name}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nCharInfo.propTypes = {\r\n  charId: PropTypes.number,\r\n};\r\n\r\nexport default CharInfo;\r\n","import { Component } from \"react\";\r\n\r\nimport ErrorMassage from \"../errorMessage/ErrorMessage\"\r\n\r\nimport \"./errorBoundary.scss\"\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errInfo){\r\n        console.log(error, errInfo);\r\n        this.setState({error: true});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error){\r\n            return (<div className=\"error\"><ErrorMassage/></div>)\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport decoration from \"../../resources/img/vision.png\";\r\n\r\nconst MainPage = () => {\r\n  const [selectedChar, setSelectedChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setSelectedChar(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected} />\r\n        </ErrorBoundary>\r\n\r\n        <ErrorBoundary>\r\n          <CharInfo charId={selectedChar} />\r\n        </ErrorBoundary>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import { useState, useEffect, useId } from \"react\";\nimport {Link} from 'react-router-dom';\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nimport \"./comicsList.scss\";\n\nconst ComicsList = () => {\n  const { loading, error, getAllComics } = useMarvelService();\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [comicsEnded, setComicsEnded] = useState(false);\n  const [offset, setOffset] = useState(200);\n\n  useEffect(() => {\n    onRequest(offset, true);\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", showNewComicsByScrollEnd);\n\n    return () => {\n      window.removeEventListener(\"scroll\", showNewComicsByScrollEnd);\n    };\n  });\n\n  const showNewComicsByScrollEnd = () => {\n    if (\n      window.pageYOffset + document.documentElement.clientHeight >=\n        document.documentElement.scrollHeight &&\n      !loading &&\n      !error &&\n      !newItemLoading\n    ) {\n      onRequest(offset);\n    }\n  };\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n\n    setComicsList((comicsList) => [...comicsList, ...newComicsList]);\n    setNewItemLoading(false);\n    setOffset((offset) => offset + 8);\n    setComicsEnded(ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`/marvel-db/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt={item.name}\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{item.name}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n\n    return <ul className=\"comics__grid\">{items}</ul>;\n  }\n\n  const items = renderItems(comicsList);\n\n  const errorMessage = error ? (\n    <li className=\"comics__item\" style={{ width: 100 + \"%\" }}>\n      {<ErrorMessage />}\n    </li>\n  ) : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"comics__list\">\n      <ul className=\"comics__grid\">\n        {spinner}\n        {errorMessage}\n        {items}\n      </ul>\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <ErrorBoundary>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n","import ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Page404 = () => {\r\n  return (\r\n    <div style={{ height: \"400px\", width: \"800px\", margin: \"0 auto\"}}>\r\n      <ErrorMessage err={\"Page doesn`t exist\"} />\r\n      <Link\r\n        className=\"button button__main\"\r\n        style={{\r\n          margin: \"0 auto\",\r\n          display: \"block\",\r\n          fontWeight: \"bold\",\r\n          fontSize: \"24px\",\r\n          marginTop: \"15px\",\r\n          width: \"500px\",\r\n        }}\r\n        to={\"/marvel-db\"}\r\n      >\r\n        {\" \"}\r\n        <div className=\"inner\">Back to main page</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Page404;\r\n","import { useParams, Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport {Page404} from \"./\"\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nimport \"./singleComicPage.scss\";\r\n\r\nconst SingleComicPage = () => {\r\n  const { loading, error, getComic, clearError } = useMarvelService();\r\n\r\n  const { comicId } = useParams();\r\n\r\n  const [comic, setComic] = useState(null);\r\n\r\n  useEffect(() => {\r\n    updateComic();\r\n    // eslint-disable-next-line\r\n  }, [comicId]);\r\n\r\n  const updateComic = () => {\r\n    clearError();\r\n    getComic(comicId).then(onComicLoaded);\r\n  };\r\n\r\n  const onComicLoaded = (comic) => {\r\n    setComic(comic);\r\n  };\r\n\r\n  const errorMessage = error ? <Page404 /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !comic) ? <View comic={comic} /> : null;\r\n  return (\r\n    <>\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </>\r\n  );\r\n};\r\n\r\nconst View = ({ comic }) => {\r\n  const { name, description, pageCount, thumbnail, language, price } = comic;\r\n\r\n  return (\r\n    <div className=\"single-comic\">\r\n      <img src={thumbnail} alt={name} className=\"single-comic__img\" />\r\n      <div className=\"single-comic__info\">\r\n        <h2 className=\"single-comic__name\">{name}</h2>\r\n        <p className=\"single-comic__descr\">{description}</p>\r\n        <p className=\"single-comic__descr\">{pageCount}</p>\r\n        <p className=\"single-comic__descr\">{language}</p>\r\n        <div className=\"single-comic__price\">{price}</div>\r\n      </div>\r\n      <Link to=\"/marvel-db/comics\" className=\"single-comic__back\">\r\n        Back to all\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleComicPage;\r\n","import { BrowserRouter as Router, Route, Routes, NoMatch } from \"react-router-dom\";\r\n\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\nimport { MainPage, ComicsPage, Page404, SingleComicPage} from \"../pages\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <div className=\"app\">\r\n        <AppHeader />\r\n        <main>\r\n          <Routes>\r\n            <Route path=\"/marvel-db\" element={<MainPage />} />\r\n            <Route path=\"/marvel-db/comics\" element={<ComicsPage />} />\r\n            <Route path=\"/marvel-db/comics/:comicId\" element={<SingleComicPage />} />\r\n            <Route path=\"*\" element={<Page404 />} />\r\n          </Routes>\r\n        </main>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./components/app/App\";\r\n\r\nimport \"./style/style.scss\";\r\n\r\nReactDOM.createRoot(document.getElementById(\"root\")).render(\r\n  \r\n    <App />\r\n  \r\n);\r\n"],"sourceRoot":""}